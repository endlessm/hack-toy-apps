#!/bin/bash -e

ARGS=$(getopt -o h \
  -l "flatpak-branch:,git-branch:,jenkins-mode,flathub,help" \
  -n "generate_manifest" -- "$@")
eval set -- "$ARGS"

usage() {
    cat <<EOF
Usage: $0 [OPTION]... APP_ID
Generate flatpak manifest for the given app

  --flatpak-branch          flatpak branch to export it to
  --git-branch              git branch to use in manifest
  --flathub                 generates the flathub manifest
  --jenkins-mode            only substitute app ID
  -h, --help                display this help and exit

EOF
}

JENKINS_MODE=
FLATHUB=
while true; do
  case "$1" in
  --flatpak-branch)
    FLATPAK_BRANCH=$2
    shift 2
    ;;
  --git-branch)
    GIT_BRANCH=$2
    shift 2
    ;;
  --jenkins-mode)
    JENKINS_MODE=true
    shift
    ;;
  -h|--help)
    usage
    exit 0
    ;;
  --flathub)
    FLATPAK_BRANCH=stable
    GIT_PATH="https://github.com/endlessm/hack-toy-apps.git"
    FLATHUB=true
    shift
    ;;
  --)
    shift
    break
    ;;
  esac
done

if [ $# -lt 1 ]; then
  echo "No app ID provided" >&2
  exit 1
fi

APP_ID=$1
FLATPAK_BRANCH=${FLATPAK_BRANCH:-master}
GIT_BRANCH=${GIT_BRANCH:-master}
GIT_PATH=${GIT_PATH:-.}
GIT_COMMIT=""
if [ -n "$FLATHUB" ]; then
  # If flathub we get the branch commit sha to add to the manifest
  COMMIT=$(git fetch && git rev-parse origin/${GIT_BRANCH})
  GIT_COMMIT="\n          \"commit\": \"$COMMIT\","
fi

if [ -n "$JENKINS_MODE" ]; then
  sed \
    -e "s|@APP_ID@|${APP_ID}|g" \
    -e "s|@GIT_PATH@|${GIT_PATH}|g" \
    -e "s|@GIT_COMMIT@|${GIT_COMMIT}|g" \
    manifest.json.in \
    > ${APP_ID}.json.in
else
  sed \
    -e "s|@APP_ID@|${APP_ID}|g" \
    -e "s|@BRANCH@|${FLATPAK_BRANCH}|g" \
    -e "s|@GIT_CLONE_BRANCH@|${GIT_BRANCH}|g" \
    -e "s|@GIT_PATH@|${GIT_PATH}|g" \
    -e "s|@GIT_COMMIT@|${GIT_COMMIT}|g" \
    manifest.json.in \
    > ${APP_ID}.json
fi
